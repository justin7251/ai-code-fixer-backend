{"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":1,"numPassedTests":31,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":31,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1749500141569,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["Static Code Analysis Utilities","Path Helper Functions","safeJoinPath"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Static Code Analysis Utilities Path Helper Functions safeJoinPath should join paths correctly within the base directory","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should join paths correctly within the base directory"},{"ancestorTitles":["Static Code Analysis Utilities","Path Helper Functions","safeJoinPath"],"duration":57,"failureDetails":[],"failureMessages":[],"fullName":"Static Code Analysis Utilities Path Helper Functions safeJoinPath should throw an error for path traversal attempts","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw an error for path traversal attempts"},{"ancestorTitles":["Static Code Analysis Utilities","Path Helper Functions","safeJoinPath"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Static Code Analysis Utilities Path Helper Functions safeJoinPath should allow joining to the base directory itself","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should allow joining to the base directory itself"},{"ancestorTitles":["Static Code Analysis Utilities","Path Helper Functions","safeJoinPath"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Static Code Analysis Utilities Path Helper Functions safeJoinPath should handle subpaths that resolve within baseDir","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle subpaths that resolve within baseDir"},{"ancestorTitles":["Static Code Analysis Utilities","Path Helper Functions","safeJoinPath"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Static Code Analysis Utilities Path Helper Functions safeJoinPath should throw an error if subpaths lead outside baseDir","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw an error if subpaths lead outside baseDir"},{"ancestorTitles":["Static Code Analysis Utilities","Path Helper Functions","safeJoinPath"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Static Code Analysis Utilities Path Helper Functions safeJoinPath should correctly resolve and validate if baseDir has trailing slash","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should correctly resolve and validate if baseDir has trailing slash"},{"ancestorTitles":["Static Code Analysis Utilities","Path Helper Functions","normalizeAndRelativizePath"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Static Code Analysis Utilities Path Helper Functions normalizeAndRelativizePath should normalize and relativize an absolute path within baseDir","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should normalize and relativize an absolute path within baseDir"},{"ancestorTitles":["Static Code Analysis Utilities","Path Helper Functions","normalizeAndRelativizePath"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Static Code Analysis Utilities Path Helper Functions normalizeAndRelativizePath should handle windows paths and normalize to forward slashes","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle windows paths and normalize to forward slashes"},{"ancestorTitles":["Static Code Analysis Utilities","Path Helper Functions","normalizeAndRelativizePath"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Static Code Analysis Utilities Path Helper Functions normalizeAndRelativizePath should return basename for path outside baseDir by default and warn","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return basename for path outside baseDir by default and warn"},{"ancestorTitles":["Static Code Analysis Utilities","Path Helper Functions","normalizeAndRelativizePath"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Static Code Analysis Utilities Path Helper Functions normalizeAndRelativizePath should return normalized absolute path if path is outside baseDir and allowOutside is true","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return normalized absolute path if path is outside baseDir and allowOutside is true"},{"ancestorTitles":["Static Code Analysis Utilities","Path Helper Functions","normalizeAndRelativizePath"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Static Code Analysis Utilities Path Helper Functions normalizeAndRelativizePath should return \".\" if filePath is same as baseDir","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return \".\" if filePath is same as baseDir"},{"ancestorTitles":["Static Code Analysis Utilities","Path Helper Functions","normalizeAndRelativizePath"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Static Code Analysis Utilities Path Helper Functions normalizeAndRelativizePath should handle already relative paths (treats them as relative to an unspecified current location, not baseDir)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle already relative paths (treats them as relative to an unspecified current location, not baseDir)"},{"ancestorTitles":["Static Code Analysis Utilities","Path Helper Functions","normalizeAndRelativizePath"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Static Code Analysis Utilities Path Helper Functions normalizeAndRelativizePath should return \"unknown\" for falsy filePath","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return \"unknown\" for falsy filePath"},{"ancestorTitles":["Static Code Analysis Utilities","Path Helper Functions","validatePmdRulesetPath"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Static Code Analysis Utilities Path Helper Functions validatePmdRulesetPath should allow valid HTTP URLs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should allow valid HTTP URLs"},{"ancestorTitles":["Static Code Analysis Utilities","Path Helper Functions","validatePmdRulesetPath"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Static Code Analysis Utilities Path Helper Functions validatePmdRulesetPath should allow valid HTTPS URLs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should allow valid HTTPS URLs"},{"ancestorTitles":["Static Code Analysis Utilities","Path Helper Functions","validatePmdRulesetPath"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Static Code Analysis Utilities Path Helper Functions validatePmdRulesetPath should allow valid PMD category strings","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should allow valid PMD category strings"},{"ancestorTitles":["Static Code Analysis Utilities","Path Helper Functions","validatePmdRulesetPath"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Static Code Analysis Utilities Path Helper Functions validatePmdRulesetPath should allow valid relative file paths (returns them as is)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should allow valid relative file paths (returns them as is)"},{"ancestorTitles":["Static Code Analysis Utilities","Path Helper Functions","validatePmdRulesetPath"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Static Code Analysis Utilities Path Helper Functions validatePmdRulesetPath should trim whitespace from paths","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should trim whitespace from paths"},{"ancestorTitles":["Static Code Analysis Utilities","Path Helper Functions","validatePmdRulesetPath"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Static Code Analysis Utilities Path Helper Functions validatePmdRulesetPath should throw error for absolute file paths","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error for absolute file paths"},{"ancestorTitles":["Static Code Analysis Utilities","Path Helper Functions","validatePmdRulesetPath"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Static Code Analysis Utilities Path Helper Functions validatePmdRulesetPath should throw error for paths with \"..\" traversal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error for paths with \"..\" traversal"},{"ancestorTitles":["Static Code Analysis Utilities","Path Helper Functions","validatePmdRulesetPath"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Static Code Analysis Utilities Path Helper Functions validatePmdRulesetPath should throw error for complex paths with \"..\" traversal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error for complex paths with \"..\" traversal"},{"ancestorTitles":["Static Code Analysis Utilities","runESLint Error Handling"],"duration":49,"failureDetails":[],"failureMessages":[],"fullName":"Static Code Analysis Utilities runESLint Error Handling should return parsed JSON on successful ESLint execution (exit code 0)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return parsed JSON on successful ESLint execution (exit code 0)"},{"ancestorTitles":["Static Code Analysis Utilities","runESLint Error Handling"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Static Code Analysis Utilities runESLint Error Handling should return parsed JSON when ESLint finds linting errors (e.g., exit code 1)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return parsed JSON when ESLint finds linting errors (e.g., exit code 1)"},{"ancestorTitles":["Static Code Analysis Utilities","runESLint Error Handling"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"Static Code Analysis Utilities runESLint Error Handling should throw \"ESLint Error: Executable not found\" if eslint is not found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw \"ESLint Error: Executable not found\" if eslint is not found"},{"ancestorTitles":["Static Code Analysis Utilities","runESLint Error Handling"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Static Code Analysis Utilities runESLint Error Handling should throw \"ESLint Error: Configuration error\" for configuration issues","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw \"ESLint Error: Configuration error\" for configuration issues"},{"ancestorTitles":["Static Code Analysis Utilities","runESLint Error Handling"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Static Code Analysis Utilities runESLint Error Handling should throw generic \"ESLint Error: Execution failed\" for other errors if stdout is not JSON","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw generic \"ESLint Error: Execution failed\" for other errors if stdout is not JSON"},{"ancestorTitles":["Static Code Analysis Utilities","runESLint Error Handling"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Static Code Analysis Utilities runESLint Error Handling should throw specific error if stdout is not JSON after non-zero exit, even if stdout looks like JSON start","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw specific error if stdout is not JSON after non-zero exit, even if stdout looks like JSON start"},{"ancestorTitles":["Static Code Analysis Utilities","runESLint Error Handling"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Static Code Analysis Utilities runESLint Error Handling should use local ESLint if checkFileExists passes for it","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should use local ESLint if checkFileExists passes for it"},{"ancestorTitles":["Static Code Analysis Utilities","runESLint Error Handling"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Static Code Analysis Utilities runESLint Error Handling should correctly use custom config path if provided and valid","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should correctly use custom config path if provided and valid"},{"ancestorTitles":["Static Code Analysis Utilities","runESLint Error Handling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Static Code Analysis Utilities runESLint Error Handling should throw Path Error if custom config path is outside directory","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw Path Error if custom config path is outside directory"},{"ancestorTitles":["Static Code Analysis Utilities","runESLint Error Handling"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Static Code Analysis Utilities runESLint Error Handling should NOT write default config if a standard ESLint config file is found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should NOT write default config if a standard ESLint config file is found"}],"endTime":1749500142664,"message":"","name":"/app/__tests__/api/utils/staticAnalyzer.spec.js","startTime":1749500141620,"status":"passed","summary":""}],"wasInterrupted":false}
